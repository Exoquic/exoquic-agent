# Exoquic PostgreSQL Agent Configuration

# PostgreSQL Connection Settings
# -----------------------------
# Hostname of the PostgreSQL server (env: PGHOST)
pg.host=localhost
# Port of the PostgreSQL server (env: PGPORT)
pg.port=5432
# Name of the database to monitor (env: PGDATABASE)
pg.database=mydb
# Username for connecting to PostgreSQL (requires replication privileges) (env: PGUSER)
pg.user=postgres
# Password for connecting to PostgreSQL (env: PGPASSWORD)
pg.password=postgres
# Schema to monitor (comma-separated list for multiple schemas)
pg.schema=public

# Replication Settings
# -------------------
# Name of the PostgreSQL replication slot to use
# The slot must be created beforehand with: SELECT pg_create_logical_replication_slot('exoquic_slot', 'pgoutput');
replication.slot.name=exoquic_slot
# Name of the PostgreSQL publication to use
# The publication must be created beforehand with: CREATE PUBLICATION exoquic_pub FOR ALL TABLES;
replication.publication.name=exoquic_pub

# Exoquic HTTP Settings
# --------------------
# Endpoint URL for the Exoquic Kafka HTTP Bridge
exoquic.baseurl=https://kafka.exoquic.com/
# API key for authentication with Exoquic
exoquic.api.key=your-api-key-here
# Connection timeout in milliseconds
http.connection.timeout=5000
# Socket timeout in milliseconds
http.socket.timeout=30000

# Retry Settings
# -------------
# Maximum number of retry attempts for failed HTTP requests
retry.max=5
# Initial delay between retries in milliseconds
retry.initial.delay.ms=1000
# Maximum delay between retries in milliseconds
retry.max.delay.ms=60000

# Performance Settings
# ------------------
# Polling interval in milliseconds for checking for new events
poll.interval.ms=1000
# Maximum number of events to process in a single batch
batch.size=100
